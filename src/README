FlashRPG
=========
v1.0.3
4/21/2014

FlashRPG is a library of AS3 files that provide the shell of an RPG Game. 

FlashRPG relies on Flashpunk 1.4, which is included in this release.

Project Homepage: http://iiointeractive.com/flashrpg
(with live demo)

FlashRPG is currently being advanced by a group of students at Dartmouth College who are developing an immersive Role Playing Game that teaches English to Chinese students. We will open the game up to the world when it is complete, but we are currently working directly with the Dandelion School in Beijing to test and improve the application. To learn more about the Dandelion Project, visit our website: http://dandelionenglish.org

The images used in this demo are not intended for use in any derivative production. They were gathered from the web link below, and should only be used to demo the software.

image source: http://www.spriters-resource.com/game_boy_advance/pokeem/

installation
=============

FlashRPG is being developed with FlashDevelop. It may be possible to compile these source files with another IDE, but I cannot guarantee that it will work.

To start working with FlashRPG follow these steps:

1) follow the steps on the following website to setup FlashDevelop:
   http://useflashpunk.net/getting-started/setting-up-flashdevelop.html
   except:
   -instead of naming your new project 'Hello World', 
    name it whatever you want your game to be called
   -note that you can use any version of the Flash Debugger.
    You do not have to find v10

2) Copy and paste the contents of this repository into the 'src' folder of your new project. Overwrite any conflicts.

3) Build and Run! Your now good to go and free to edit anything.

notes
=====

There is not very much code, so I will give an overview instead of a full API.

Main - the entry point of the application. It sets the screen resolution and creates a new 'GameWorld'.

GameWorld - the main function of FlashRPG. GameWorld is initialized with a level to fill out its data, then it controls all input, UI changes, and character interactions.

Level - the parent object of a Level. Contains references to tile data and dialogue strings.

Level_PalletTown - an example of a Level child. Contains references to level specific xml data and images, and implements essential functions.

Character - the parent object for all Players and NPCs. Contains state information and manipulation functions.

Player - the player character, contains a reference to the player image

NPC - an object containing Non-Player-Character images and data.

MapAnimation - an object used for any animating tiles on the map.

TextBubble - the black popup shown when an interaction starts.

TextObject - a line of text in a 'TextBubble'